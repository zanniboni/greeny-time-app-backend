generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id         String     @id() @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String     @db.VarChar
  icon       String?    @db.VarChar
  color      String?    @db.VarChar
  permanent  Boolean?   @default(false) @db.Boolean
  created_at DateTime   @default(now()) @db.Timestamp(6)
  updated_at DateTime   @default(now()) @db.Timestamp(6)
  expenses   expenses[]
}

model salary {
  value        Int
  payment_date DateTime @db.Timestamp(6)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  userId       String?  @db.Uuid
  id           String   @id() @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users        users?   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_tokens {
  id         Int      @id() @default(autoincrement())
  token      String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model users {
  name       String   @db.VarChar
  email      String   @db.VarChar
  password   String   @db.VarChar
  roleId     String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  id         String   @id() @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role       role?    @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  salary     salary[]
}

model expenses {
  id         String    @id() @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String    @db.VarChar
  value      Float     @db.DoublePrecision
  categoryId String?   @db.Uuid
  category   category? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
}

model role {
  id         String   @id() @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  users      users[]
}
